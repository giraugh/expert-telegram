<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Control</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Seed Randomness For Tutorial
random_set_seed(0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Vars
show_debug_message("Initiliazing Tutorial");

gameSteps = 0;
tileObj = Tile;
tilesWidth = 6;
tilesHeight = 1;
tileSize = sprite_get_width(object_get_sprite(tileObj));
tilePadding = 8;
tileSep = tileSize+tilePadding;

potentialScore = 0;

timer = 0;
timerMax = 0;

tileStartX = (room_width/2) - ((tilesWidth-1)*tileSep)/2;
tileStartY = (room_height/2);

scr_DefineColours();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Define Tutorial Vars
state = 0;
connections = 0;

if (os_type == os_android) {
    android = true;
} else {android = false;}

text = "Drag across the two Green tiles below";
if (android){text = "Drag across the two Red tiles below"}
nextText = "";
textState = 0;
textSize = 1;

drawScore = false;
drawTimer = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Tiles
scr_createTiles();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to main menu, tutorial finished
room_goto(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Increase Gamesteps
gameSteps++;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change text
if (textState == 1) {
    textSize = lerp(textSize,0,0.4);
    if (textSize &lt; 0.1) {
        textState = 2;
        text = nextText;
    }
}

if (textState == 2) {
    textSize = lerp(textSize,1,0.4);
    if (textSize &gt; 0.9) {
        textState = 0;
        nextText = "";
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Potentials
potentialScore = scr_GetScore();
potentialTime = scr_GetTime();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reduce timer
if (drawTimer) {
    timer -= 1/room_speed;
    if (timer &lt;= 0) {
        textState = 1;
        nextText = "Whoops, you let the timer run out#Resetting Timer...";
        timer = timerMax;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Proceed?
switch (state) {

case 0 :
    if (connections &gt; 0) {
        state = 1;
        textState = 1;
        nextText = "now the Blues";
        connections = 0;
    }
break;

case 1 :
    if (connections &gt; 0) {
        state = 2;
        textState = 1;
        nextText = "now the Reds";
        connections = 0;
    }
break;

case 2 :
    if (connections &gt; 0) {
        state = 3;
        textState = 1;
        nextText = "now the Yellows#(you can get all of them)";
        if (android){nextText = "now the Blues#(you can get all of them)";}
        scr_changeUpTiles(2);
        connections = 0;
    }
break;

case 3 :
    if (connections &gt; 0) {
        state = 4;
        textState = 1;
        nextText = "Get a score of 40 or more";
        scr_changeUpTiles(3);
        connections = 0;
        score = 0;
        drawScore = true;
    }
break;

case 4 :
    if (score &gt;= 40) {
        state = 5;
        textState = 1;
        nextText = "Get a score of 300#and dont let the timer run out";
        scr_changeUpTiles(4);
        connections = 0;
        timerMax = 30;
        timer = timerMax;
        drawTimer = true;
    }
break;

case 5 :
    if (score &gt;= 300) {
        state = 6;
        textState = 1;
        nextText = "Your all set,#time for the real deal!";
        connections = 0;
        alarm[0] = room_speed*2;
    }
break;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw score
if (drawScore == true) {
    var offsetX = 15;
    var offsetY = 70;
    
    var xx = tileStartX-offsetX;
    var yy = tileStartY-offsetY - (tileSize/2);
    var str = "";
    
    //Add Score
    draw_set_font(fntDefault);
    if (potentialScore != 0) {
        str = string(score) + " + " + string(potentialScore);
    }
    else {
        str = string(score);
    }
    
    //Add Level
    //if (gameLevel != 1){str += "   x"+string(gameLevel)}
    
    draw_text(xx,yy,str);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw timer
if (drawTimer) {
    var width = 16;
    var offset = 15;
    var height = (tileSep*tilesHeight);
    var oOffset = 2;
    var flash = 16;
    var flashStart = 0.25;
    
    var per = max(0,timer/timerMax)
    var xx = tileStartX+(tileSep*tilesWidth)+offset;
    var yy = tileStartY - tileSize/2;
    
    draw_set_colour(make_color_rgb(70,70,70));
    draw_rectangle(xx+oOffset, yy+oOffset, xx+width-oOffset, yy+height-oOffset,false);
    draw_set_colour(c_white);
    if (per &lt; flashStart &amp;&amp; gameSteps % flash &lt; flash/2){draw_set_colour(c_red);}
    draw_rectangle(xx, yy+(height*(1-per)), xx+width, yy+height,false);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Tutorial Text
draw_set_color(c_white);
draw_set_font(fntDefault);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_text_transformed(room_width/2,100,text,textSize,textSize,0);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
